dcl m int = 2, n int = 3;
p: proc (x, y int, b bool) returns (int);
    dcl s int = x;
    if b then
        s += y;
        result s;
    else
        result y;
    fi;
end;

dcl b bool;
read (b);
print (p(m, n, b));

'''
Scope level for ProcStmt p: 1
  formal parameters & their offsets
  x : -2
  b : -4
  _ret : -5
  y : -3
  variables & their offsets
  s : 0
'''
'''
Scope level for Program : 0
  variables & their offsets
  m : 0
  b : 2
  n : 1
  functions, return types & labels
  p : int, labels start=1, end=3
'''
[
  ('stp'),
  ('alc', 3),
  ('ldc', 2),
  ('stv', 0, 0),
  ('ldc', 3),
  ('stv', 0, 1),
  ('jmp', 3),
  ('lbl', 1),
  ('enf', 1),
  ('alc', 1),
  ('ldv', 1, -2),
  ('stv', 1, 0),
  ('ldv', 1, -4),
  ('jof', 4),
  ('ldv', 1, -3),
  ('ldv', 1, 0),
  ('add'),
  ('stv', 1, 0),
  ('ldv', 1, 0),
  ('stv', 1, -5),
  ('jmp', 5),
  ('lbl', 4),
  ('ldv', 1, -3),
  ('stv', 1, -5),
  ('lbl', 5),
  ('lbl', 2),
  ('ret', 1, 1),
  ('lbl', 3),
  ('rdv'),
  ('stv', 0, 2),
  ('alc', 1),
  ('ldv', 0, 2),
  ('ldv', 0, 1),
  ('ldv', 0, 0),
  ('cfu', 1),
  ('prv'),
  ('dlc', 3),
  ('end'),
]